/* 
Một số nguyên dương có N chữ số được gọi là SỐ VÒNG nếu khi ta nhân số đó lần lượt với các số từ 1 đến N thì ta được một số thỏa mãn tính chất:

Nếu như chọn các chữ số từ một vị trí nào đó rồi vòng lại (đến trước chữ số đầu tiên chọn) ta được số đã cho ban đầu.

Ví dụ: số 142857 là số vòng, vì:

142857 × 1 = 142857

142857 × 2 = 285714

142857 × 3 = 428571

142857 × 4 = 571428

142857 × 5 = 714285

142857 × 6 = 857142

Viết chương trình xác định xem một số có phải số vòng hay không.

Input

Dòng đầu ghi số bộ test. Không quá 20.

Mỗi bộ test trên một dòng số nguyên, có từ 2 đến 60 chữ số.

Chú ý: Có thể có các số 0 ở đầu, và không được xóa bỏ các số 0 này, nó là một phần của số và  cũng được tính trong việc xác định độ dài của số.

Ví dụ: “01” là số có 2 chữ số, nó khác với “1” có 1 chữ số.

Output

Ghi ra YES hoặc NO

Ví dụ

Input

Output

5

142857

142856

142858

01

0588235294117647

YES

NO

NO

NO

YES
*/
#include <stdio.h>
#include <string.h>
int n, a[15];
char s[100];
int check()
{
    int b[100], c = 0, d[15], sum;
    for (int i = 2; i <= n; ++i)
    {
        for (int j = 0; j <= 9; ++j)
            d[j] = 0;
        for (int j = n - 1; j >= 0; --j)
        {
            sum = (s[j] - '0') * i + c;
            b[j] = sum % 10;
            d[b[j]]++;
            c = sum / 10;
        }
        if (c > 0)
            d[c]++;
        for (int j = 0; j <= 9; ++j)
            if (a[j] != d[j])
                return 0;
    }
    return 1;
}
int main()
{
    int t;
    scanf("%d", &t);
    while (t--)
    {
        scanf("%s", s);
        n = strlen(s);
        for (int i = 0; i <= 9; ++i)
            a[i] = 0;
        for (int i = 0; i < n; ++i)
            a[s[i] - '0']++;
        if (check())
            printf("YES\n");
        else
            printf("NO\n");
    }
}
