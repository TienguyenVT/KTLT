/*
Đề bài
Cho mảng A[] gồm N phần tử chưa được sắp xếp. Nhiệm vụ của bạn là sắp xếp các phần tử của mảng A[] theo thứ tự tăng dần bằng thuật toán Merge Sort.

Dữ liệu vào
Dòng đầu tiên đưa vào số lượng bộ test T.

Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test gồm hai phần: phần thứnhất đưa vào số N tương ứng với số phần tử của mảng A[];
phần thứ 2 là N số của mảng A[]; các số được viết cách nhau một vài khoảng trống.
T, N, A[i] thỏa mãn ràng buộc: 1≤T≤100; 1≤N, A[i]≤10^6

Dữ liệu ra
Đưa ra kết quả các test theo từng dòng


Ví dụ
Input #1 

2 5
4 1 3 9 7
10
10 9 8 7 6 5 4 3 2 1
Output #1 

1 3 4 7 9
1 2 3 4 5 6 7 8 9 10
*/
#include <bits/stdc++.h>
using namespace std;
// tron 2 day con day 1 [l,m], day 2[m+1,r]
void merge(int a[], int l, int m, int r)
{
	vector<int> x(a + l, a + m + 1);
	vector<int> y(a + m + 1, a + r + 1);
	int i = 0, j = 0;
	while (i < x.size() && j < y.size())
	{
		if (x[i] <= y[j])
		{
			a[l] = x[i];
			++l;
			++i;
		}
		else
		{
			a[l] = y[j];
			++l;
			++j;
		}
	}
	while (i < x.size())
	{
		a[l] = x[i];
		++l;
		++i;
	}
	while (j < y.size())
	{
		a[l] = y[j];
		++l;
		++j;
	}
}
void mergeSort(int a[], int l, int r)
{
	if (l >= r)
		return;
	int m = (l + r) / 2;
	mergeSort(a, l, m);
	mergeSort(a, m + 1, r);
	merge(a, l, m, r);
}
int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		int n;
		cin >> n;
		int a[n];
		for (int i = 0; i < n; i++)
		{
			cin >> a[i];
		}
		mergeSort(a, 0, n - 1);
		for (int x : a)
		{
			cout << x << " ";
		}
		cout << endl;
	}
	return 0;
}
