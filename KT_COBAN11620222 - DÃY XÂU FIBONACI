/*
Đề bài
Một dãy xâu ký tự G chỉ bao gồm các chữ cái A và B được gọi là dãy xâu Fibonacci nếu thỏa mãn tính chất: G(1) = A; G(2) = B; G(n) = G(n-2)+G(n-1). Với phép cộng (+) là phép nối hai xâu với nhau. Bài toán đặt ra là tìm ký tự ở vị trí thứ i (tính từ 1) của xâu Fibonacci thứ n.

Dữ liệu vào
Dòng 1 ghi số bộ test. Mỗi bộ test ghi trên một dòng 2 số nguyên N và i (1<N<93). Số i đảm bảo trong phạm vi của xâu G(N) và không quá 18 chữ số.

Dữ liệu ra
Ghi ra màn hình kết quả tương ứng với từng bộ test.

Ví dụ
Input 
2
6 4
8 19
Output 
A
B
*/
	#include<bits/stdc++.h>
	#define MAX 92
	using namespace std;
	vector <long long> Fibonacci(MAX+1);
	void fibonacci(){
		Fibonacci[1] = 1;
		Fibonacci[2] = 1;
		for ( int i =3; i<=MAX;i++)
		  Fibonacci[i]=Fibonacci[i-2]+Fibonacci[i-1];
	}
	char FindChar ( int n, long long i){
		if ( n == 1) cout <<"A"<<endl;
		else if (n ==2) cout <<"B"<<endl;
		else if ( i <= Fibonacci[n-2])
		return FindChar (n-2,i );
		else
		return FindChar (n-1, i-Fibonacci[n-2]);
	}
	int main(){
		fibonacci();
		int t;
		cin >>t;
		while (t--){
			int n;
			long long i;
			cin >>n>>i;
			FindChar(n,i);
		}
	}
	
